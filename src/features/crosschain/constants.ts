export declare enum CoinKey {
    ETH = "ETH",
    MATIC = "MATIC",
    BNB = "BNB",
    DAI = "XDAI",
    FTM = "FTM",
    OKT = "OKT",
    AVAX = "AVAX",
    HT = "HT",
    ONE = "ONE",
    FSN = "FSN",
    MOVR = "MOVR",
    EXP = "EXP",
    TCH = "TCH",
    UBQ = "UBQ",
    META = "META",
    DIODE = "DIODE",
    CELO = "CELO",
    FUSE = "FUSE",
    TLOS = "TLOS",
    CRO = "CRO",
    SHIB = "SHIB",
    L1 = "L1",
    RBTC = "RBTC",
    TBG = "TBG",
    VLX = "VLX",
    GLMR = "GLMR",
    METIS = "METIS",
    SOL = "SOL",
    EVM = "EVM",
    USDT = "USDT",
    USDC = "USDC",
    TEST = "TEST",
    KAL = "KAL",
    SDIODE = "SDIODE",
    SPARK = "SPARK",
    TRBTC = "TRBTC",
    WBTC = "WBTC",
    WETH = "WETH",
    SUSHI = "SUSHI",
    DODO = "DODO",
    MCB = "MCB",
    CELR = "CELR",
    IF = "IF"
}

export declare enum ChainKey {
    ETH = "eth",
    POL = "pol",
    BSC = "bsc",
    DAI = "dai",
    OKT = "okt",
    FTM = "ftm",
    AVA = "ava",
    ARB = "arb",
    HEC = "hec",
    OPT = "opt",
    ONE = "one",
    FSN = "fsn",
    MOR = "mor",
    EXP = "exp",
    TCH = "tch",
    UBQ = "ubq",
    MET = "met",
    DIO = "dio",
    CEL = "cel",
    FUS = "fus",
    TLO = "tlo",
    CRO = "cro",
    BOB = "bob",
    SHI = "shi",
    GL1 = "gl1",
    RSK = "rsk",
    TBW = "tbw",
    VEL = "vel",
    MOO = "moo",
    MAM = "mam",
    AUR = "aur",
    TER = "ter",
    OAS = "oas",
    SOL = "sol",
    EVM = "evm",
    ROP = "rop",
    RIN = "rin",
    GOR = "gor",
    METT = "mett",
    DIOT = "diot",
    KOV = "kov",
    MUM = "mum",
    ARBT = "arbt",
    OPTT = "optt",
    BSCT = "bsct",
    HECT = "hect",
    ONET = "onet",
    FUST = "fust",
    TLOT = "tlot",
    RSKT = "rskt",
    SOLT = "solt",
    OAST = "oast",
    TERT = "tert",
    AVAT = "avat",
    EVMT = "evmt",
    MORT = "mort",
    FTMT = "ftmt"
}

export interface Token {
    address: string;
    symbol: string;
    decimals: number;
    chainId: number;
    name: string;
    coinKey?: CoinKey;
    priceUSD?: string;
    logoURI?: string;
}